# Generated by Django 5.0.2 on 2024-08-20 04:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('turmas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('nome', models.CharField(help_text='Informe o nome', max_length=100, verbose_name='Nome')),
                ('email', models.EmailField(help_text='Informe o email', max_length=254, unique=True, verbose_name='Email')),
                ('data_nasc', models.DateField(blank=True, help_text='Informe a data de nascimento', null=True, verbose_name='Data de Nascimento')),
                ('matricula', models.CharField(help_text='Informe a matrícula', max_length=14, unique=True, verbose_name='Matrícula')),
                ('lider', models.BooleanField(default=False, help_text='Marque esta caixa se for líder. OBS: Sujeito a aceitação', verbose_name='Líder')),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('turma', models.ForeignKey(blank=True, help_text='Selecione a sua turma', null=True, on_delete=django.db.models.deletion.CASCADE, to='turmas.turma', verbose_name='Turma')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Aluno',
                'verbose_name_plural': 'Alunos',
            },
        ),
    ]
